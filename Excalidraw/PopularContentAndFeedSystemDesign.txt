Design the popular feed on a content authoring platform such as Confluence. If they have never used Confluence, there are parallels like popular feeds that can be used instead. Most candidates have seen a version of popularity feed in another scenario like YouTube, Twitter, Facebook. However that will limit some of the areas of deeper dive that are listed below.

There are three aspects to this system:

Gathering the popularity indicators, content views, likes and shares.

Calculating the top-n popular content

Providing real time updates to the client

Functional requirements: From a user’s perspective, there are three key experiences that we want to build here:

As a user, I can see the top-n most popular content in the system at any given time.

As a user, I want to see freshness in the popular content and not the content I’ve already read.

As a user, I may view this feed in any device - web, mobile, tablet. 

Non-Functional requirements: Imagine that you are on a team that needs to design and build the system to power this experience.

Your team’s system should be able to generate any user’s popular feed in real-time - maximum latency seen by the end user would be 2s.

